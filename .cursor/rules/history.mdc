---
description: Listening history implementation
globs: 
alwaysApply: false
---
# Bible Reading History Feature

## Requirements
- Track user's reading history (book and chapter selections)
- Store history entries with timestamps
- Allow users to view their reading history
- Allow users to clear their history
- Display history in a dialog that can be opened from the header
- Show each history entry with book name, chapter number, and timestamp
- Allow users to click on a history entry to navigate to that book and chapter

## Implementation
- Use Zustand for state management
- Store history entries in local storage
- Create a history store with add and clear functions
- Implement a HistoryDialog component with a trigger button in the header
- Format dates based on the current locale
- Provide empty state message when no history exists
- Show scrollable list of history entries when available
- Add clear history button in the dialog header

## Design
- Use Dialog component from shadcn/ui for desktop
- Use Drawer component from shadcn/ui for mobile with background scaling
- Display history entries in a scrollable list
- Style history entries as clickable buttons
- Show timestamp in a smaller, muted text
- Keep the UI clean and consistent with the rest of the application

# History Feature Implementation

## Overview
Implementation of reading history functionality for the Bible app, allowing users to track and revisit previously read chapters.

## Components

### HistoryDialog
- **Location**: `src/components/bible/HistoryDialog.tsx`
- **Purpose**: Displays reading history in a responsive dialog/drawer
- **Features**:
  - Responsive design using useMediaQuery hook for desktop/mobile layouts
  - Desktop: Modal dialog with clear history button
  - Mobile: Bottom drawer interface with background scaling enabled
  - List of previous readings with timestamps
  - Click to navigate back to previous chapters
  - Proper component usage: DialogClose for dialog section, DrawerClose for drawer section

### Drawer Component
- **Location**: `src/components/ui/drawer.tsx`
- **Fix Applied**: Added proper shouldScaleBackground prop forwarding to DrawerPrimitive.Root
- **Issue**: The shouldScaleBackground prop was not being passed through to the underlying vaul drawer component
- **Solution**: Explicitly destructure and forward the shouldScaleBackground prop

## Hooks

### useMediaQuery
- **Location**: `src/hooks/use-media-query.ts`
- **Purpose**: Provides responsive breakpoint detection
- **Usage**: Returns boolean indicating if media query matches
- **Implementation**: 
  - Must return the matches state value
  - Should properly handle media query change events
  - Includes cleanup for event listeners

## Store Integration
- Uses `useHistoryStore` for history data management
- Uses `useBible` context for navigation
- Uses `useLocaleStore` for date formatting

## Key Requirements
- Responsive design with desktop dialog and mobile drawer
- History items show book name, chapter, and formatted timestamp
- Clear history functionality
- Proper TypeScript types
- Internationalization support
- Proper component usage (DialogClose vs DrawerClose)
- Background scaling functionality for drawer on mobile

## Bug Fixes Applied
1. **Drawer Background Scaling**: Fixed shouldScaleBackground prop not being forwarded in drawer.tsx
2. **Component Usage**: Fixed incorrect DialogClose usage in drawer section - should use DrawerClose
